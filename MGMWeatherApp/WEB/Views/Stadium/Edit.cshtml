@using WEB.ViewModels;
 
@model StadiumEditViewModel

<section class="content p-5">@ViewBag.ErrorMessage
    <div class="card card-primary">
        <div class="card-header">
            <h3 class="card-title">Hava durumu ekle</h3>
        </div>
        <div class="card-body row align-items-center justify-content-start">
            <div class="col-12" id="errorListContainer" class="d-none">
                <ul id="errorList"></ul>
            </div>
            <div class="col-4">
                <div class="form-group mb-3">
                    <label>Gün</label>
                    <input type="date" id="detailDate" class="form-control" />
                </div>
            </div>
            <div class="col-12 row align-items-center m-0" id="detailContainer">
                <div class="col-12 detailItem row border rounded mb-2" id="IDHERE">
                    <div class="col-4">
                        <div class="form-group mb-3">
                            <label>Saat</label>
                            <input type="number" class="hour form-control" />
                        </div>
                    </div>
                    <div class="col-4">
                        <div class="form-group mb-3">
                            <label>Sıcaklık</label>
                            <input type="number" class="temperature form-control" />
                        </div>
                    </div>
                    <div class="col-4">
                        <div class="form-group mb-3">
                            <label>Nem</label>
                            <input type="number" class="humidity form-control" />
                        </div>
                    </div>
                    <div class="col-4">
                        <div class="form-group mb-3">
                            <label>Hava Durumu</label>
                            <select class="form-control select2bs4 weatherType">
                                <option value="-1">Hava durumu seçin</option>
                                @foreach (var weatherType in Model.WeatherTypes)
                                {
                                    <option value="@weatherType.Id">@weatherType.Type</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="col-2 row align-items-center">
                        <button class="btn btn-block btn-danger" onclick="removeThis(event)"><i class="fa fa-minus mr-2"></i>Sil</button>
                    </div>
                </div>
            </div>
            <div class="col-12 row align-items-center justify-content-center">
                <button class="btn btn-success mr-3" onclick="populate()"><i class="fa fa-plus mr-2"></i>Ekle</button>
                <button class="btn btn-danger" onclick="removeLast()"><i class="fa fa-minus mr-2"></i>Sondan Sil</button>
            </div>
        </div>
        <div class="card-footer">
            <button class="btn btn-primary" onclick="addDetails()">Kaydet</button>
        </div>
    </div>
</section>

@section Scripts
{
    <script>
        var container;
        var day = null;

        $(document).ready(function() {
           
            container = $(".detailItem")[0].outerHTML;

            let details = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.StadiumSavedDetail?.HourlyDetails))

            if(details && details.length > 0)
            {
                day = '@Model.StadiumSavedDetail!.Day.ToString("yyyy-MM-dd")';

                $('#detailDate').val(day);
                $('#detailDate').attr('disabled', 'disabled');

                $("#detailContainer").empty();

                details.forEach((detail, idx, arr) =>
                {
                    let id = "detail_"+idx;

                    let fillContainer = container.replace("IDHERE", id);

                    $("#detailContainer").append(fillContainer);

                    $('.hour', $('#' + id)).val(detail.Hour);
                    $('.temperature', $('#' + id)).val(detail.Temperature);
                    $('.humidity', $('#' + id)).val(detail.Humidity);
                    $('.weatherType', $('#' + id)).val(detail.SelectedWeatherTypeId);
                });
            }
        });

        function populate()
        {
            if ($(".detailItem").length <= 16)
            {
                $("#detailContainer").append(container);
            }
        }

        function removeLast()
        {
            if ($(".detailItem").length > 1)
            {
                $(".detailItem")[$(".detailItem").length - 1].remove();
            }
        }

        function removeThis(event)
        {
            event.target.closest("div.detailItem").remove()
        }

        function addDetails()
        {
            $("#errorListContainer").addClass("d-none");
            let items = $(".detailItem");
            let date = $("#detailDate").val();

            if(items.length > 0 && date !== '')
            {
                var entities = Array.from(items).map(element => {
                    console.log("elementId", element.id);
                    let id = element.id == "IDHERE" ? null : element.id.substring(7);
                    console.log("id", id);
                    let hour = $(".hour", element).val();
                    let temperature = $(".temperature", element).val();
                    let humidity = $(".humidity", element).val();
                    let weatherTypeId = $(".weatherType", element).val();

                    return {
                        Id: id,
                        Hour: hour,
                        Temperature: temperature,
                        Humidity: humidity,
                        SelectedWeatherTypeId: weatherTypeId
                    };
                });

                console.log("entities", entities);
                $.ajax({
                    url: '@Url.Action("Edit")',
                    type: 'POST',
                    cache: false,
                    data: JSON.stringify({ 
                        StadiumId: @Model.StadiumSavedDetail?.Id,
                        Day: day === null ? date : day,
                        Entities: entities
                    }),
                    dataType: 'json',
                    contentType: 'application/json',
                    success: (response) => {
                        console.log("success", response);
                        if(response.isError !== false)
                        {
                            $("#errorListContainer").removeClass("d-none");
                            $("#errorList").empty();
                            $("#errorList").append(`<li>${response.message}</li>`);
                        }
                        else
                        {
                            window.location.replace("/Stadium/Index");
                        }
                    },
                    error: (response) => {
                        console.log("error", response);
                    }
                });
            }
            else if (date === '')
            {
                alert("Gün bilgisi boş bırakılamaz");
            }
        }
    </script>
}